{% if nfc_firewall_rules_access_flush_chains | default(false) -%}
{#
    these rules are used adding back to the table after the firewall has been flushed
#}
# This Firewall Rules file must be the first file by name
# with sorting alphanumerically.
# The intention of this rule file, is to flush the table and add
# the default policy of return. subsequent rule files should use `-I`
# when creating rule files

*filter

-F {{ chain.name | lower }}

# May not be required as chains may to initial point of passing. ToDo: Confirm.
-A {{ chain.name | lower }} -j {{ chain.default | default('RETURN') }}

COMMIT

{% elif nfc_firewall_rules_access_custom | default(false) -%}
*filter


-I {{ chain.name + ' ' }}
    {%- if chain['protocol'] | default('') %}-p {{ chain['protocol'] }} {% endif -%}{#- Protocol -#}
    {%- if chain['source']['host'] | default('') %}-s {{ chain['source']['host'] }} {% endif -%}{#- Source host -#}
    {%- if chain['dest']['iface'] | default('') %}-o {{ chain['dest']['iface'] }} {% endif -%}{#- Destination host -#}
    {%- if chain['source']['iface'] | default('') %}-i {{ chain['source']['iface'] }} {% endif -%}{#- Destination host -#}
    {%- if chain['dest']['host'] | default('') %}-d {{ chain['dest']['host'] }} {% endif -%}{#- Destination host -#}
    {%- if chain['dest']['port'] | default('') is iterable and chain['dest']['port'] | default('') is not string %} -m multiport --dports {% for port in chain['dest']['port'] -%} {#- multi destination port -#}
        {{- port -}}
        {%- if loop.index | int < chain['dest']['port'] | length | int -%},{%- endif -%}{%- endfor -%}
    {%- elif chain['dest']['port'] | default('') %} --dport {{ chain['dest']['port'] }}{% endif -%}{#- Single destination port -#}
    {%- if chain['state'] | default('') %}-m conntrack --ctstate {{ chain['state'] }} {% endif -%}{#- connectivity state -#}
    {%- if chain['comment'] | default('') %} -m comment --comment "{{ chain['comment'] }}" {% endif -%}{#- rule comment -#}
    -j {{ chain['policy'] | upper }}

COMMIT
{% elif nfc_firewall_rules_setup_chains | default(false) %}
{#
    these rules are used for building the rules.v4 file for when the chain is flushed
#}
{#
    SoF Firewall Chain Setup
#}


#
# Chain: {{ chain.name }}
# Source: /etc/iptables-reloader/setup.d/chain_{{ chain.name }}
#
# Firewall dynamic chain file for iptables-reloader script.

{#
    Chain: INPUT
-#}
{% if chain['table'] | lower == 'input' -%}
{%- if chain['chain'] | default(false) -%}

-N {{ chain['name'] | lower }}
{% endif %}
-A {{ 'INPUT ' }}
    {%- if chain['protocol'] | default('') %}-p {{ chain['protocol'] }} {% endif -%}{#- Protocol -#}
    {%- if chain['dest']['host'] | default('') %}-d {{ chain['dest']['host'] }} {% endif -%}{#- Destination host -#}
    {%- if chain['dest']['iface'] | default('') %}-o {{ chain['dest']['iface'] }} {% endif -%}{#- Destination host -#}
    {%- if chain['source']['iface'] | default('') %}-i {{ chain['source']['iface'] }} {% endif -%}{#- Destination host -#}
    {%- if chain['source']['host'] | default('') %}-s {{ chain['source']['host'] }} {% endif -%}{#- Source host -#}
    {%- if chain['dest']['port'] | default('') is iterable and chain['dest']['port'] | default('') is not string %} -m multiport --dports {% for port in chain['dest']['port'] -%} {#- multi destination port -#}
        {{- port -}}
        {%- if loop.index | int < chain['dest']['port'] | length | int -%},{%- endif -%}{%- endfor -%}
    {%- elif chain['dest']['port'] | default('') %} --dport {{ chain['dest']['port'] }}{% endif -%}{#- Single destination port -#}
    {%- if chain['state'] | default('') %}-m conntrack --ctstate {{ chain['state'] }} {% endif -%}{#- connectivity state -#}
    {%- if chain['comment'] | default('') %} -m comment --comment "{{ chain['comment'] }}" {% endif -%}{#- rule comment -#}
    -j {%if chain['chain'] | default(false) %}{{ chain['name'] | lower }}{% else %}{{ chain['policy'] | upper }}{% endif %}{# rule policy #}

{%- if chain['chain'] | default(false) -%}
{# #-A {{ chain['name'] | lower }} -j RETURN #}
{%- endif -%}
{%- endif -%}

{#-
    Chain: FORWARD
-#}

{%- if chain['table'] | lower == 'forward' -%}
{%- if chain['chain'] | default(false) -%}

-N {{ chain['name'] | lower }}
{% endif %}
-A {{ 'FORWARD ' }}
    {%- if chain['protocol'] | default('') %}-p {{ chain['protocol'] }} {% endif -%}{#- Protocol -#}
    {%- if chain['source']['host'] | default('') %}-s {{ chain['source']['host'] }} {% endif -%}{#- Source host -#}
    {%- if chain['dest']['host'] | default('') %}-d {{ chain['dest']['host'] }} {% endif -%}{#- Destination host -#}
    {%- if chain['dest']['iface'] | default('') %}-o {{ chain['dest']['iface'] }} {% endif -%}{#- Destination host -#}
    {%- if chain['source']['iface'] | default('') %}-i {{ chain['source']['iface'] }} {% endif -%}{#- Destination host -#}
    {%- if chain['dest']['port'] | default('') is iterable and chain['dest']['port'] | default('') is not string %} -m multiport --dports {% for port in chain['dest']['port'] -%} {#- multi destination port -#}
        {{- port -}}
        {%- if loop.index | int < chain['dest']['port'] | length | int -%},{%- endif -%}{%- endfor -%}
    {%- elif chain['dest']['port'] | default('') %} --dport {{ chain['dest']['port'] }}{% endif -%}{#- Single destination port -#}
    {%- if chain['state'] | default('') %}-m conntrack --ctstate {{ chain['state'] }} {% endif -%}{#- connectivity state -#}
    {%- if chain['comment'] | default('') %} -m comment --comment "{{ chain['comment'] }}" {% endif -%}{#- rule comment -#}
    -j {%if chain['chain'] | default(false) %}{{ chain['name'] | lower }}{% else %}{{ chain['policy'] | upper }}{% endif %}{# rule policy #}

{%- if chain['chain'] | default(false) -%}
{# # -A {{ chain['name'] | lower }} -j RETURN #}
{%- endif -%}
{%- endif -%}

{#- 
    Chain: OUTPUT
-#}

{%- if chain['table'] | lower == 'output' -%}
{%- if chain['chain'] | default(false) -%}

-N {{ chain['name'] | lower }}
{% endif %}
-A {{ 'OUTPUT ' }}
    {%- if chain['protocol'] | default('') %} -p {{ chain['protocol'] }} {% endif -%}{#- Protocol -#}
    {%- if chain['source']['host'] | default('') %}-s {{ chain['source']['host'] }} {% endif -%}{#- Source host -#}
    {%- if chain['dest']['host'] | default('') %}-d {{ chain['dest']['host'] }} {% endif -%}{#- Destination host -#}
    {%- if chain['dest']['iface'] | default('') %}-o {{ chain['dest']['iface'] }} {% endif -%}{#- Destination host -#}
    {%- if chain['source']['iface'] | default('') %}-i {{ chain['source']['iface'] }} {% endif -%}{#- Destination host -#}
    {%- if chain['dest']['port'] | default('') is iterable and chain['dest']['port'] | default('') is not string %} -m multiport --dports {% for port in chain['dest']['port'] -%} {#- multi destination port -#}
        {{- port -}}
        {%- if loop.index | int < chain['dest']['port'] | length | int -%},{%- endif -%}{%- endfor -%}
    {%- elif chain['dest']['port'] | default('') %} --dport {{ chain['dest']['port'] }}{% endif -%}{#- Single destination port -#}
    {%- if chain['state'] | default('') %}-m conntrack --ctstate {{ chain['state'] }} {% endif -%}{#- connectivity state -#}
    {%- if chain['comment'] | default('') %} -m comment --comment "{{ chain['comment'] }}" {% endif -%}{#- rule comment -#}
    -j {%if chain['chain'] | default(false) %}{{ chain['name'] | lower }}{% else %}{{ chain['policy'] | upper }}{% endif %}{# rule policy #}


{%- if chain['chain'] | default(false) -%}
{# # -A {{ chain['name'] | lower }} -j RETURN #}
{%- endif -%}
{%- endif %}

{#
    EoF Firewall Chain Setup
#}
{% else %}
{#
   Firewall rules. will be added to `chain.name` and the comment is part of filename 'rules.d/rule_<comment>'
#}
*filter

-I {{ chain.name + ' ' }}
    {%- if chain['protocol'] | default('') %} -p {{ chain['protocol'] }} {% endif -%}{#- Protocol -#}
    {%- if chain['source']['host'] | default('') %}-s {{ chain['source']['host'] }} {% endif -%}{#- Source host -#}
    {%- if chain['dest']['host'] | default('') %}-d {{ chain['dest']['host'] }} {% endif -%}{#- Destination host -#}
    {%- if chain['dest']['iface'] | default('') %}-o {{ chain['dest']['iface'] }} {% endif -%}{#- Destination host -#}
    {%- if chain['source']['iface'] | default('') %}-i {{ chain['source']['iface'] }} {% endif -%}{#- Destination host -#}
    {%- if chain['dest']['port'] | default('') is iterable and chain['dest']['port'] | default('') is not string %} -m multiport --dports {% for port in chain['dest']['port'] -%} {#- multi destination port -#}
        {{- port -}}
        {%- if loop.index | int < chain['dest']['port'] | length | int -%},{%- endif -%}{%- endfor -%}
    {%- elif chain['dest']['port'] | default('') %} --dport {{ chain['dest']['port'] }}{% endif -%}{#- Single destination port -#}
    {%- if chain['state'] | default('') %}-m conntrack --ctstate {{ chain['state'] }} {% endif -%}{#- connectivity state -#}
    {%- if chain['comment'] | default('') %} -m comment --comment "{{ chain['comment'] }}" {% endif -%}{#- rule comment -#}
    -j {%if chain['chain'] | default(false) %}{{ chain['name'] | lower }}{% else %}{{ chain['policy'] | upper }}{% endif %}{# rule policy #}

COMMIT
{% endif %}

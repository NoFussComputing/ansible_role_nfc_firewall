---
- name: "Restart fail2ban"
  ansible.builtin.service:
    name: fail2ban
    state: restarted
  listen: 'restart_fail2ban'


- name: Reload Fail2ban Configuration
  ansible.builtin.command:
    cmd: fail2ban-client reload
  listen: 'reload_fail2ban'
  register: fail2ban_reload
  failed_when: >
    not 'Have not found any log file for' in fail2ban_reload.stderr
      and
    fail2ban_reload.rc | int > 0
      and
    install_fail2ban | bool


- name: Configure_fail2ban
  ansible.builtin.template:
    src: fail2ban-jail.local.j2
    dest: "{{ directory_fail2ban_config }}/{% if item.sub_path is defined %}{{ item.sub_path }}/{% endif %}{{ item.name }}.local"
    owner: root
    mode: '0600'
    force: true
  listen: 'configure_fail2ban'
  loop: "{{ fail2ban_configuration }}"
  notify: reload_fail2ban
  # when: fail2ban_configuration is defined
  when: install_fail2ban | bool


- name: Restart iptables to load changed/new rules
  ansible.builtin.service:
    name: netfilter-persistent
    state: restarted
  listen: restart_firewall
  notify: post_firewall_restart

- name: Post Firewall Restart
  ansible.builtin.shell:
    cmd: /bin/iptables-reloader
    executable: /bin/bash
  become: true
  changed_when: true
  listen: post_firewall_restart


- name: Call Firewall Reloader
  ansible.builtin.shell:
    cmd: /bin/iptables-reloader
    executable: /bin/bash
  become: true
  changed_when: true
  listen: firewall_reloader
  notify: restart_firewall

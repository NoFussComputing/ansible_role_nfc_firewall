---

nfc_role_firewall_additional_rules: []        # Optional, List of dict. Additional Firewall rules to add

  # ALL Available Fields
  # - name:
  #   comment:
  #   chain: true # Optional, Boolean. only if the rule is a chain, set this to true. enforces `-j {chain-name}`
  #   protocol:
  #   source:
  #     host:
  #     port:
  #   dest:
  #     host:
  #     port:       # Optional, int/list of int
  #   state:        # Optional. NEW, RELATED, ESTABLISHED etc defaults to new as related and established rule will allow.
  #   table:        # Mandatory, String. Name of the table to add chain jump rule.


  # - protocol: tcp                              # Example allow port 80 Input chain
  #   table: INPUT
  #   comment: Web Server Access
  #   dest:
  #     port: 80
  #   policy: ACCEPT
  #   when: true                                 # Optional, Boolean/string. Used to denote if rule should apply. Can use jinja to choose true/false. if false, file will be removed
  
  # - name: kubernetes-embedded-etcd             # Example chain for multi-port allow tcp/2379 and tcp/2380
  #   chain: true
  #   table: INPUT
  #   protocol: tcp
  #   dest:
  #     port:
  #       - '2379'
  #       - '2380'
  #   comment: etcd. Servers only
  #   when: true                                 # Optional, Boolean/string. Used to denote if rule should apply. Can use jinja to choose true/false.  if false, file will be removed
 
  # - name: custom                               # example chain called custom for all
  #   chain: true
  #   table: INPUT
  #   comment: All Custom Rules in this table

  # - name: custom                               # Example rule to allow all for chain 'custom'
  #   source:
  #     host: '0.0.0.0/0'
  #   dest:
  #     port: 22
  #   protocol: tcp
  #   policy: ACCEPT
  #   comment: Allow ssh                        # this will be added to the firewall as comment and used as the rules filename
  #   when: true                                # Optional, Boolean/string. Used to denote if rule should apply. Can use jinja to choose true/false.  if false, file will be removed
 


nfc_role_firewall_firewall_type: iptables     # Mandatory, Choice, [iptables]. The type of firewall to install/configure.

nfc_role_firewall_install_fail2ban: false     # Mandatory, Boolean. Installation of fail2ban.

nfc_role_firewall_policy_input: DROP        # Mandatory, Choice [ACCEPT|DROP]. default input chain policy.

nfc_role_firewall_policy_forward: DROP      # Mandatory, Choice [ACCEPT|DROP]. default forward chain policy.

nfc_role_firewall_policy_output: ACCEPT       # Mandatory, Choice [ACCEPT|DROP]. default output chain policy.


#######################################################################################
#   Old vars to be refactored with nfc_role_firewall_
#######################################################################################

directory_fail2ban_config: /etc/fail2ban

fail2ban_user: root
fail2ban_group: root
fail2ban_filemode: '600'
fail2ban_ignore_ip: ''
fail2ban_configuration: []
# fail2ban_backend: # Optional, string, configr setting for logging backend
#  # Mandatory. iptables


# Full conf
# fail2ban:
# #   # version: 0.11.2
# #   # package_sha256: 44fe3d67e7d24bba4fc81ee672059dcb67980258db6101bcd8740736a9d9110f
#   log_paths: []
# #     # list of dictionary of valid fail2ban log file paths

# #  filter: []
# # #     - name: keycloak
# # #       entries:
# # #         # dictionary of valid fail2ban filters

#   config: []
# #     - name: sshd
# #       sub_path: jail.d
# #       sections:
#   #       DEFAULT: {}  # optional
#   #         # - entry:
#   #         #   value:
# #         sshd:
# #           name: sshd
# #           enabled: 'true'
# #           backend: systemdkubernetes_firewall
# #           chain: INPUT
# #           port: ssh
# #           # logpath = %(sshd_log_localhost)s
# #           filter: sshd[mode=aggressive]
# #           maxretry: 3kubernetes_firewall


# http_rules:
#   - protocol: tcp
#     table: INPUT
#     comment: Web Server Access
#     dest:
#       port: 80
#     policy: ACCEPT


# https_rules:
#   - protocol: tcp
#     table: INPUT
#     comment: TLS Web Server Access
#     dest:
#       port: 443
#     policy: ACCEPT

# # Why?? if fail2ban table is deleted, it's not recreated when banned


# oracle_cloud_rules:
#   - name: InstanceServices
#     chain: true
#     table: OUTPUT
#     dest:
#       host: 169.254.0.0/16


# sshd_chains:
#   - name: sshd
#     chain: true
#     table: INPUT
#     comment: SSH server Access
#     protocol: tcp
#     dest:
#       port: 22
